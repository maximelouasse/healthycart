{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.router.ts","./src/app/auth.guard.ts","./src/app/material/material.module.ts","./src/app/modules/form/form-login/form-login.component.ts","./src/app/modules/form/form-login/form-login.component.html","./src/app/modules/form/form-register/form-register.component.ts","./src/app/modules/form/form-register/form-register.component.html","./src/app/routes/home-page/home-page.component.ts","./src/app/routes/home-page/home-page.component.html","./src/app/routes/list-recipe-page/list-recipe-page.component.ts","./src/app/routes/list-recipe-page/list-recipe-page.component.html","./src/app/routes/login-page/login-page.component.ts","./src/app/routes/login-page/login-page.component.html","./src/app/routes/product-page/product-page.component.ts","./src/app/routes/product-page/product-page.component.html","./src/app/routes/register-page/register-page.component.ts","./src/app/routes/register-page/register-page.component.html","./src/app/routes/scanner-page/scanner-page.component.ts","./src/app/routes/scanner-page/scanner-page.component.html","./src/app/services/auth/auth.service.ts","./src/app/services/observable/observable.service.ts","./src/app/services/product/product.service.ts","./src/app/services/user/user.service.ts","./src/app/shared/bot-bar/bot-bar.component.ts","./src/app/shared/bot-bar/bot-bar.component.html","./src/app/shared/side-bar/side-bar.component.ts","./src/app/shared/side-bar/side-bar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","/*\nImports\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n  import { Router } from '@angular/router';\n\n  // Inner\n  import { AuthService } from './services/auth/auth.service';\n  import { ObservablesService } from './services/observable/observable.service';\n//\n\n/*\nComponant configuration\n*/\n  @Component({\n    selector: 'app-root',\n    template: `\n      <router-outlet></router-outlet>\n      <app-bot-bar></app-bot-bar>\n    `\n  })\n//\n\n/*\nExport\n*/\n  export class AppComponent implements OnInit {\n\n    constructor( private ObservablesService: ObservablesService, private AuthService: AuthService, private Router: Router ){}\n\n      ngOnInit() {\n        if(localStorage.getItem('local-userId') != null) {\n          this.AuthService.identity({ \"id\": localStorage.getItem('local-userId') })\n          .then( apiResponse => {\n            // Save user data\n            this.ObservablesService.setObservableData('users', apiResponse.data);\n\n            // Navigation to protected route\n            //this.Router.navigateByUrl('/');\n          })\n          .catch( error => console.log(\"Auto connection fail\", error));\n        } else {\n          this.Router.navigateByUrl('/login');\n        }\n      }\n  }\n//\n","/*\nImports\n*/\n    // Angular\n    import { BrowserModule } from '@angular/platform-browser';\n    import { NgModule } from '@angular/core';\n    import { HttpClientModule } from '@angular/common/http';\n    import { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n    // Router\n    import { RouterModule } from \"@angular/router\"\n    import { AppRouterModule } from \"./app.router\";\n\n    // Inner\n    import { MaterialModule } from './material/material.module';\n    import { AppComponent } from './app.component';\n    import { HomePageComponent } from './routes/home-page/home-page.component';\n    import { LoginPageComponent } from './routes/login-page/login-page.component';\n    import { RegisterPageComponent } from './routes/register-page/register-page.component';\n    import { ProductPageComponent } from './routes/product-page/product-page.component';\n    import { ScannerPageComponent } from './routes/scanner-page/scanner-page.component';\n    import { FormLoginComponent } from \"./modules/form/form-login/form-login.component\";\n    import { FormRegisterComponent } from \"./modules/form/form-register/form-register.component\";\n    import { BotBarComponent } from './shared/bot-bar/bot-bar.component';\n    import { SideBarComponent } from './shared/side-bar/side-bar.component';\n\n    import { AuthService } from \"./services/auth/auth.service\";\n    import { ProductService } from \"./services/product/product.service\";\n    import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n    import { ListRecipePageComponent } from './routes/list-recipe-page/list-recipe-page.component';\n//\n\n/*\nDefinition & export\n*/\n  @NgModule({\n    declarations: [\n      AppComponent,\n      HomePageComponent,\n      LoginPageComponent,\n      RegisterPageComponent,\n      ProductPageComponent,\n      ScannerPageComponent,\n      FormLoginComponent,\n      FormRegisterComponent,\n      BotBarComponent,\n      SideBarComponent,\n      ListRecipePageComponent\n    ],\n    imports: [\n      BrowserModule,\n      RouterModule.forRoot( AppRouterModule, { onSameUrlNavigation: 'reload' } ),\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      BrowserAnimationsModule,\n      MaterialModule\n    ],\n    exports: [RouterModule],\n    providers: [AuthService, ProductService],\n    bootstrap: [AppComponent]\n  })\n  export class AppModule { }\n","/*\nImports\n*/\n    // Angular\n    import { Routes } from '@angular/router';\n\n    // Inner\n    import { AuthGuard } from \"./auth.guard\";\n    import { HomePageComponent } from './routes/home-page/home-page.component';\n    import { LoginPageComponent } from './routes/login-page/login-page.component';\n    import { ScannerPageComponent } from './routes/scanner-page/scanner-page.component';\n    import { ProductPageComponent } from './routes/product-page/product-page.component';\n    import { ListRecipePageComponent } from './routes/list-recipe-page/list-recipe-page.component';\n//\n\n/*\nExport\n*/\n    export const AppRouterModule: Routes = [\n      {\n        path: '',\n        component: HomePageComponent\n      },\n      {\n        path: 'login',\n        component: LoginPageComponent,\n        //canActivate: [ !AuthGuard ]\n      },\n      {\n        path: 'scanner',\n        component: ScannerPageComponent,\n        canActivate: [ AuthGuard ]\n      },\n      {\n        path: 'product',\n        component: ProductPageComponent,\n        canActivate: [ AuthGuard ]\n      },\n      {\n        path: 'product/:barcode',\n        component: ProductPageComponent,\n        canActivate: [ AuthGuard ]\n      },\n      {\n        path: 'recipe',\n        component: ListRecipePageComponent,\n        canActivate: [ AuthGuard ]\n      },\n    ];\n//\n","// Imports\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n// Inner\r\nimport { AuthService } from \"./services/auth/auth.service\";\r\n\r\n// Definition\r\n@Injectable({ providedIn: 'root' })\r\n\r\n// Export\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private AuthService: AuthService,\r\n        private Router: Router,\r\n    ){}\r\n\r\n\r\n    canActivate(): Promise<any> {\r\n        return new Promise( (resolve, reject) => {\r\n          if(localStorage.getItem('local-userId') === null) {\r\n            return resolve(false)\r\n          } else {\r\n            this.AuthService.identity({ 'id': localStorage.getItem('local-userId')})\r\n            .then( ( apiResponse ) => {\r\n              if(apiResponse.err == null) { return resolve(true) }\r\n              else { this.Router.navigateByUrl('/') };\r\n            })\r\n            .catch( ( apiResponse ) =>  this.Router.navigateByUrl('/login'))\r\n          }\r\n        })\r\n    }\r\n}\r\n","/*\r\nImport\r\n*/\r\n  // Angular\r\n  import { NgModule } from '@angular/core';\r\n  import { CommonModule } from '@angular/common';\r\n  import { MatButtonModule } from '@angular/material/button';\r\n  import { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n  import { MatIconModule } from '@angular/material/icon';\r\n  import { MatToolbarModule } from '@angular/material/toolbar';\r\n  import { MatSidenavModule } from '@angular/material/sidenav';\r\n  import { MatMenuModule } from '@angular/material/menu';\r\n  import { MatListModule } from '@angular/material/list';\r\n  import { MatGridListModule } from '@angular/material/grid-list';\r\n  import { MatCardModule } from '@angular/material/card';\r\n  import { MatStepperModule } from '@angular/material/stepper';\r\n  import { MatFormFieldModule } from '@angular/material/form-field';\r\n  import { MatInputModule } from '@angular/material/input';\r\n  import { MatExpansionModule } from '@angular/material/expansion';\r\n  import { MatSelectModule } from '@angular/material/select';\r\n//\r\n\r\nconst MaterialComponents = [\r\n  CommonModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatMenuModule,\r\n  MatListModule,\r\n  MatGridListModule,\r\n  MatCardModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatExpansionModule,\r\n  MatSelectModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [MaterialComponents],\r\n  exports: [MaterialComponents]\r\n})\r\nexport class MaterialModule { }\r\n","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n  import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n//\n\n/*\nComponent configuration\n*/\n  @Component({\n    selector: 'app-form-login',\n    templateUrl: './form-login.component.html',\n  })\n//\n\n/*\nComponent class definition\n*/\n  export class FormLoginComponent implements OnInit {\n\n    // Declarations\n    public formData: FormGroup;\n\n    @Output() formSubmit = new EventEmitter();\n\n    constructor( private FormBuilder: FormBuilder ) { }\n\n    // Method to reset form\n    private resetForm = ()  => {\n      this.formData = this.FormBuilder.group({\n          email: [ null, Validators.required ],\n          password: [ null, Validators.required ]\n      });\n    };\n\n    ngOnInit(): void {\n      this.resetForm();\n    }\n  }\n//\n","<form\n    [formGroup]=\"formData\"\n    (submit)=\"formSubmit.emit(formData.value)\"\n>\n    <input\n        formControlName=\"email\"\n        type=\"email\" name=\"email\" required minlength=\"5\" placeholder=\"Your email\"\n    >\n\n    <input\n        formControlName=\"password\"\n        type=\"password\" name=\"password\" required placeholder=\"Your password\"\n    >\n\n    <button\n        [disabled]=\"!formData.valid\"\n        type=\"submit\"\n    >OK</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-register',\n  templateUrl: './form-register.component.html',\n  styles: [\n  ]\n})\nexport class FormRegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>form-register works!</p>\n","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n  import { FormBuilder, FormGroup } from \"@angular/forms\";\n  import { Router } from '@angular/router';\n\n  // Inner\n  import { UserService } from '../../services/user/user.service';\n  import { ObservablesService } from '../../services/observable/observable.service';\n//\n\n/*\nComponent configuration\n*/\n  @Component({\n    selector: 'app-home-page',\n    templateUrl: './home-page.component.html',\n    styleUrls: ['./home-page.component.css']\n  })\n//\n\n/*\nComponent class definition\n*/\n  export class HomePageComponent implements OnInit {\n\n    /*\n    Déclarations\n    */\n      public productsList: any;\n      public userId: any;\n      public formData: FormGroup;\n      showSidenav = false;\n\n      @Input() currentListId: any;\n    //\n\n    constructor( private UserService: UserService, private ObservablesService: ObservablesService, private FormBuilder: FormBuilder ) { }\n\n    /*\n    Methods\n    */\n      private getList = (listId = null) => {\n        this.UserService.getUserList('user', this.userId)\n        .then( apiResponse => {\n          this.ObservablesService.getObservableData('list').subscribe( userList => {\n            // Check value\n            if( userList === null) {\n              this.productsList = null;\n              this.currentListId = null;\n            } else if( listId === null ) {\n              this.productsList = userList[0];\n              this.currentListId = userList[0]._id;\n            } else if(Array.isArray(userList)) {\n              let exist = false;\n\n              userList.forEach(element => {\n                if(listId === element._id) {\n                  this.productsList = element;\n                  this.currentListId = element._id;\n                  exist = true;\n                }\n              });\n\n              if(!exist) {\n                this.productsList = userList[0];\n                this.currentListId = userList[0]._id;\n                localStorage.setItem('list-selected', userList[0]._id);\n              }\n            } else {\n              this.productsList = userList;\n              this.currentListId = userList._id;\n            }\n          } )\n        })\n        .catch( apiResponse => {\n          console.error(apiResponse)\n        })\n      }\n\n      public resetForm = () => {\n        this.formData = this.FormBuilder.group({\n          product: [ null ]\n        });\n      };\n\n      public addProduct = (data: any) => {\n        this.UserService.addProductToList(\"list\", this.currentListId, {name: data.value.product});\n        this.resetForm();\n      }\n\n      public deleteProduct = (key) => {\n        this.UserService.deleteProductToList(\"list\", this.currentListId, key);\n        this.getList(this.currentListId);\n      }\n\n      public listChangedHandler = (event: any) => {\n        this.getList(event);\n        this.showSidenav = false;\n      }\n\n      toggleSidenav() {\n        this.showSidenav = !this.showSidenav;\n      }\n    //\n\n    ngOnInit(): void {\n      this.resetForm();\n\n      if(localStorage.getItem('local-userId') != null) {\n        this.userId = localStorage.getItem('local-userId');\n\n        if(localStorage.getItem('list-selected')) {\n          this.getList(localStorage.getItem('list-selected'));\n        } else {\n          this.getList();\n        }\n      }\n    }\n\n  }\n//\n","<mat-sidenav-container>\n  <mat-sidenav-content *ngIf=\"productsList\" style=\"padding-bottom: 60px;\">\n\n    <app-side-bar (listChanged)=\"listChangedHandler($event)\" [open]=\"showSidenav\"></app-side-bar>\n\n    <mat-toolbar color=\"primary\">\n      <mat-toolbar-row>\n        <button mat-icon-button (click)=\"toggleSidenav()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <h1>{{ productsList.name }}</h1>\n      </mat-toolbar-row>\n      <mat-toolbar-row>\n        <div>\n          <form id=\"addProductForm\" [formGroup]=\"formData\" (submit)=\"addProduct(formData)\">\n            <input formControlName=\"product\" type=\"text\" name=\"product\" placeholder=\"Ajouter un produit\">\n\n            <button mat-icon-button type=\"submit\"><mat-icon>add_shopping_cart</mat-icon></button>\n          </form>\n        </div>\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div class=\"content_products\">\n      <div class=\"list_products\">\n        <ul *ngIf=\"productsList.products\">\n          <li *ngFor=\"let product of productsList.products | keyvalue\" (click)=\"deleteProduct(product.key)\">\n            <span>{{ product.value.charAt(0) }}</span><p>{{ product.value }}</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n//\n\n/*\nComponent configuration\n*/\n  @Component({\n    selector: 'app-list-recipe-page',\n    templateUrl: './list-recipe-page.component.html',\n    styleUrls: ['./list-recipe-page.component.css']\n  })\n//\n\n/*\nComponent class definition\n*/\n  export class ListRecipePageComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n  }\n//\n","<mat-sidenav-container>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <mat-toolbar-row>\n        <h1>Recettes</h1>\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div class=\"list-recipe\">\n      <ul>\n        <li class=\"recipe\">\n          <div style=\"background-image: url(../../../assets/img/recipes/recipe_1.jpg);\">\n            <p class=\"name\">Cookies maison</p>\n            <p class=\"time\"><mat-icon>timer</mat-icon>25min</p>\n          </div>\n        </li>\n        <li class=\"recipe\">\n          <div style=\"background-image: url(../../../assets/img/recipes/recipe_2.jpg);\">\n            <p class=\"name\">Tarte au chocolat blanc et aux fraises</p>\n            <p class=\"time\"><mat-icon>timer</mat-icon>50min</p>\n          </div>\n        </li>\n        <li class=\"recipe\">\n          <div style=\"background-image: url(../../../assets/img/recipes/recipe_3.jpg);\">\n            <p class=\"name\">Crème dessert facile au chocolat</p>\n            <p class=\"time\"><mat-icon>timer</mat-icon>15min</p>\n          </div>\n        </li>\n        <li class=\"recipe\">\n          <div style=\"background-image: url(../../../assets/img/recipes/recipe_4.jpg);\">\n            <p class=\"name\">Crème dessert aux pommes</p>\n            <p class=\"time\"><mat-icon>timer</mat-icon>40min</p>\n          </div>\n        </li>\n        <li class=\"recipe\">\n          <div style=\"background-image: url(../../../assets/img/recipes/recipe_5.jpg);\">\n            <p class=\"name\">Pizza dessert au Nutella</p>\n            <p class=\"time\"><mat-icon>timer</mat-icon>25min</p>\n          </div>\n        </li>\n        <li class=\"recipe\">\n          <div style=\"background-image: url(../../../assets/img/recipes/recipe_6.jpg);\">\n            <p class=\"name\">Muffin forêt noire</p>\n            <p class=\"time\"><mat-icon>timer</mat-icon>45min</p>\n          </div>\n        </li>\n        <li class=\"recipe\">\n          <div style=\"background-image: url(../../../assets/img/recipes/recipe_7.jpg);\">\n            <p class=\"name\">Beignets fantaisies</p>\n            <p class=\"time\"><mat-icon>timer</mat-icon>25min</p>\n          </div>\n        </li>\n        <li class=\"recipe\">\n          <div style=\"background-image: url(../../../assets/img/recipes/recipe_8.jpg);\">\n            <p class=\"name\">Biscuit chocolat</p>\n            <p class=\"time\"><mat-icon>timer</mat-icon>25min</p>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit, Input } from '@angular/core';\n  import { Router } from '@angular/router';\n\n  // Inner\n  import { AuthService } from \"../../services/auth/auth.service\";\n  import { ObservablesService } from \"../../services/observable/observable.service\";\n//\n\n/*\nComponent configuration\n*/\n  @Component({\n    selector: 'app-login-page',\n    templateUrl: './login-page.component.html',\n    styleUrls: ['./login-page.component.css']\n  })\n//\n\n/*\nComponent class definition\n*/\n  export class LoginPageComponent implements OnInit {\n\n    constructor( private AuthService: AuthService, private ObservablesService: ObservablesService, private Router: Router ) {\n\n    }\n\n    // Method to login user infos\n    public loginUser = ( data: any ) => {\n      this.AuthService.login({ 'email': data.email, 'password': data.password })\n      .then( userInfo => {\n        console.log('SUCCESS request', userInfo);\n        this.Router.navigateByUrl('/');\n      })\n      .catch( error => {\n        console.log('ERROR request', error);\n      });\n    };\n\n    ngOnInit(): void {\n    }\n\n  }\n//\n","<p>login-page works!</p>\n<app-form-login\n    (formSubmit)=\"loginUser($event)\"\n></app-form-login>\n","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n  import { Router, ActivatedRoute } from '@angular/router';\n  import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n  // Inner\n  import { ProductService } from '../../services/product/product.service';\n  import { ObservablesService } from '../../services/observable/observable.service';\n//\n\n/*\nComponent configuration\n*/\n  @Component({\n    selector: 'app-product-page',\n    templateUrl: './product-page.component.html',\n    styleUrls: ['./product-page.component.css']\n  })\n//\n\n/*\nComponent class definition\n*/\n  export class ProductPageComponent implements OnInit {\n\n    // Declarations\n    public productData: any;\n    public defaultList = [];\n    public qualityList = [];\n    public userProduct: any;\n    public productScore: any;\n    public userNote: Number;\n    public formData: FormGroup;\n    public selectedNote: Number;\n\n    constructor( private FormBuilder: FormBuilder, private Router: Router, private route: ActivatedRoute, private ProductService: ProductService, private ObservablesService: ObservablesService ) { }\n\n    /*\n    Methods\n    */\n      public scannerPage = () => {\n        this.Router.navigateByUrl('/scanner');\n      }\n\n      public sendNote = (data) => {\n        if(0 < data.note && data.note <= 5) {\n          this.ProductService.setUserNoteProduct('product', this.productData.code, data.note, localStorage.getItem('local-userId'))\n          .then( apiResponse => {\n            if(apiResponse.data != null) {\n              let listScore = apiResponse.data.score;\n              let averageScore = 0;\n              this.productScore = null;\n              this.userNote = null;\n\n              if(listScore.length > 0) {\n                listScore.forEach(element => {\n                  averageScore += element.note;\n\n                  if(element.user === localStorage.getItem('local-userId')) {\n                    this.userNote = element.note;\n                  }\n                });\n\n                this.productScore = Math.round((averageScore / listScore.length) * 100) / 100;\n              }\n            } else {\n              this.productScore = null;\n              this.userNote = null\n            }\n          })\n        }\n      }\n\n      // Method to reset form\n      private resetForm = ()  => {\n        this.formData = this.FormBuilder.group({\n            note: [ null, Validators.required ]\n        });\n      };\n    //\n\n    ngOnInit() {\n      this.resetForm();\n\n      let barcode = this.route.snapshot.params['barcode'];\n\n      if(barcode === undefined) {\n        this.productData = null;\n        this.ObservablesService.getObservableData('users').subscribe( userInfo => {\n          // Check value\n          if( userInfo === null) { this.userProduct = null }\n          else { this.userProduct = userInfo.products}\n        } )\n      } else {\n        this.ProductService.getProdutData(barcode)\n        .then( (data) => {\n          this.productData = data.data.product;\n\n          if(typeof this.productData.nutrient_levels['salt'] != undefined) {\n            if(this.productData.nutrient_levels['salt'] != \"high\") {\n              this.qualityList.push({name: \"salt\", value: this.productData.nutrient_levels['salt'], text: \"Sel\"});\n            } else {\n              this.defaultList.push({name: \"salt\", value: this.productData.nutrient_levels['salt'], text: \"Sel\"});\n            }\n          }\n\n          if(typeof this.productData.nutrient_levels['sugars'] != undefined) {\n            if(this.productData.nutrient_levels['sugars'] != \"high\") {\n              this.qualityList.push({name: \"sugars\", value: this.productData.nutrient_levels['sugars'], text: \"Sucres\"});\n            } else {\n              this.defaultList.push({name: \"sugars\", value: this.productData.nutrient_levels['sugars'], text: \"Sucres\"});\n            }\n          }\n\n          if(typeof this.productData.nutrient_levels['fat'] != undefined) {\n            if(this.productData.nutrient_levels['fat'] != \"high\") {\n              this.qualityList.push({name: \"fat\", value: this.productData.nutrient_levels['fat'], text: \"Matières grasses / Lipides\"});\n            } else {\n              this.defaultList.push({name: \"fat\", value: this.productData.nutrient_levels['fat'], text: \"Matières grasses / Lipides\"});\n            }\n          }\n\n          if(typeof this.productData.nutrient_levels['saturated-fat'] != undefined) {\n            if(this.productData.nutrient_levels['saturated-fat'] != \"high\") {\n              this.qualityList.push({name: \"saturated-fat\", value: this.productData.nutrient_levels['saturated-fat'], text: \"Acides gras saturés\"});\n            } else {\n              this.defaultList.push({name: \"saturated-fat\", value: this.productData.nutrient_levels['saturated-fat'], text: \"Acides gras saturés\"});\n            }\n          }\n\n          this.ObservablesService.getObservableData('product').subscribe( productInfo => {\n            // Check value\n            if( productInfo !== null) {\n              this.productScore = productInfo;\n            } else {\n              this.ProductService.getProductScore('product', barcode)\n              .then( apiResponse => {\n                if(apiResponse.data != null) {\n                  let listScore = apiResponse.data.score;\n                  let averageScore = 0;\n                  this.productScore = null;\n                  this.userNote = null;\n\n                  if(listScore.length > 0) {\n                    listScore.forEach(element => {\n                      averageScore += element.note;\n\n                      if(element.user === localStorage.getItem('local-userId')) {\n                        this.userNote = element.note;\n                      }\n                    });\n\n                    this.productScore = Math.round((averageScore / listScore.length) * 100) / 100;\n                  }\n                } else {\n                  this.productScore = null;\n                  this.userNote = null\n                }\n              })\n            }\n          })\n        });\n      }\n    }\n\n  }\n//\n","<mat-sidenav-container>\n  <mat-sidenav-content>\n    <mat-toolbar *ngIf=\"productData\" color=\"primary\">\n      <mat-toolbar-row>\n        <button mat-icon-button>\n          <a [routerLink]=\"'/product'\"><mat-icon>keyboard_arrow_left</mat-icon></a>\n        </button>\n        <h1>{{ productData.product_name_fr }} - {{ productData.quantity }}</h1>\n      </mat-toolbar-row>\n      <mat-toolbar-row>\n        <span>Code barre: {{ productData.code }}</span>\n      </mat-toolbar-row>\n      <mat-toolbar-row>\n        <span *ngIf=\"productScore\">Moyenne utilisateurs: {{ productScore }} / 5</span>\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div *ngIf=\"productData\">\n      <div class=\"content_product_info\">\n        <div class=\"product_img\">\n          <img src=\"{{ productData.image_url }}\" alt=\"{{ productData.product_name_fr }}\">\n        </div>\n        <div class=\"nutriscore_img\">\n          <img src=\"assets/img/nutriscore-{{ productData.nutrition_grades }}.svg\" alt=\"Note nutritionnelle NutriScore : {{ productData.nutrition_grades }}\">\n        </div>\n\n        <div class=\"clear\" style=\"padding: 20px 0px;\"></div>\n\n        <mat-accordion>\n          <mat-expansion-panel>\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Ma note\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <div class=\"content_section section_note\">\n              <div *ngIf=\"userNote\">\n                <span>{{ userNote }}</span>\n              </div>\n              <div *ngIf=\"!userNote\">\n                <form [formGroup]=\"formData\" (submit)=\"sendNote(formData.value)\">\n                  <mat-form-field>\n                    <mat-select formControlName=\"note\" >\n                      <mat-option [value]=\"1\">1</mat-option>\n                      <mat-option [value]=\"2\">2</mat-option>\n                      <mat-option [value]=\"3\">3</mat-option>\n                      <mat-option [value]=\"4\">4</mat-option>\n                      <mat-option [value]=\"5\">5</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <button mat-icon-button mat-mini-fab type=\"submit\">\n                    <mat-icon>done</mat-icon>\n                  </button>\n                </form>\n              </div>\n            </div>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel>\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Caractéristiques du produit\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <div class=\"content_section\">\n              <p><span class=\"bold\">Dénomination génératique</span>: {{ productData.product_name_fr }}</p>\n              <p><span class=\"bold\">Quantité</span>: {{ productData.quantity }}</p>\n              <p><span class=\"bold\">Marques</span>: {{ productData.brands }}</p>\n              <p><span class=\"bold\">Catégories</span>: {{ productData.categories }}</p>\n            </div>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel>\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Défauts (pour 100g)\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <div class=\"content_section\">\n              <ul *ngIf=\"defaultList.length > 0\">\n                <li *ngFor=\"let default of defaultList\">\n                  <div class=\"name\">\n                    <span>{{ default.text }}</span><br>{{ default.value }}\n                  </div>\n                  <div class=\"nutriment\">\n                    <span class=\"nutriment_indicator {{ default.value }}\"></span><span>{{ productData.nutriments[default.name] }}</span>\n                  </div>\n                </li>\n              </ul>\n              <p *ngIf=\"defaultList.length == 0\">Aucun défaut</p>\n            </div>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel>\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Qualités (pour 100g)\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <div class=\"content_section\">\n              <ul *ngIf=\"qualityList.length > 0\">\n                <li *ngFor=\"let quality of qualityList\">\n                  <div class=\"name\">\n                    <span>{{ quality.text }}</span><br>{{ quality.value }}\n                  </div>\n                  <div class=\"nutriment\">\n                    <span class=\"nutriment_indicator {{ quality.value }}\"></span><span>{{ productData.nutriments[quality.name] }}</span>\n                  </div>\n                </li>\n              </ul>\n              <p *ngIf=\"qualityList.length == 0\">Aucune qualité</p>\n            </div>\n          </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n    </div>\n\n    <mat-toolbar *ngIf=\"userProduct\" color=\"primary\">\n      <mat-toolbar-row>\n        <button mat-icon-button>\n          <a [routerLink]=\"'/'\"><mat-icon>keyboard_arrow_left</mat-icon></a>\n        </button>\n        <h1>Liste des produits scannée</h1>\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div *ngIf=\"userProduct\">\n      <div class=\"list_products\">\n        <ul>\n          <li *ngFor=\"let product of userProduct\">\n            <a routerLink=\"/product/{{ product.barcode }}\">\n              <div class=\"product_img\" style.background-image=\"url({{ product.img_url }})\"></div>\n            </a>\n          </li>\n        </ul>\n      </div>\n\n      <div class=\"scanner_button\">\n        <span (click)=\"scannerPage()\">\n          <img src=\"../../../assets/img/scanner.png\" alt=\"\">\n        </span>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n//\n\n/*\nComponent configuration\n*/\n  @Component({\n    selector: 'app-register-page',\n    templateUrl: './register-page.component.html',\n    styleUrls: ['./register-page.component.css']\n  })\n//\n\n/*\nComponent class definition\n*/\n  export class RegisterPageComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n  }\n//\n","<p>register-page works!</p>\n","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n  import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n  import { Router } from '@angular/router';\n\n  // Inner\n  import { ProductService } from '../../services/product/product.service';\n  import { UserService } from '../../services/user/user.service';\n  import { ObservablesService } from '../../services/observable/observable.service';\n//\n\n/*\nComponent configuration\n*/\n  @Component({\n    selector: 'app-scanner-page',\n    templateUrl: './scanner-page.component.html',\n    styleUrls: ['./scanner-page.component.css']\n  })\n//\n\n/*\nComponent class definition\n*/\n  export class ScannerPageComponent implements OnInit {\n\n    // Declarations\n    public formData: FormGroup;\n    public userId: String;\n\n    constructor( private Router: Router, private FormBuilder: FormBuilder, private ProductService: ProductService, private UserService: UserService, private ObservablesService: ObservablesService ) { }\n\n    // Method to reset form\n    private resetForm = ()  => {\n      this.formData = this.FormBuilder.group({\n          barcode: [ null, Validators.required ]\n      });\n    };\n\n    public getProduct = (event) => {\n      this.ProductService.getProdutData(event.barcode)\n      .then( apiResponse => {\n        // Check value\n        if( apiResponse.err ) {\n          this.ProductService.getProductOpenfoodfact(event.barcode)\n          .then( data => {\n            if(data.status) {\n              this.ProductService.saveJsonProduct(event.barcode, data)\n              .then( result => {\n                this.UserService.addProductScanned(\"user\", this.userId, result.data)\n                .then( data => {\n                  this.Router.navigateByUrl('/product/' + event.barcode);\n                } )\n              })\n            }\n          } )\n        } else {\n          this.UserService.addProductScanned(\"user\", this.userId, apiResponse.data)\n          .then( data => {\n            this.Router.navigateByUrl('/product/' + event.barcode);\n          })\n        }\n      })\n      .catch( error => console.log(error));\n    }\n\n    ngOnInit(): void {\n      if(localStorage.getItem('local-userId') != null) {\n        this.userId = localStorage.getItem('local-userId');\n      }\n      this.resetForm();\n    }\n\n  }\n//\n","<div>\n  <form [formGroup]=\"formData\" (submit)=\"getProduct(formData.value)\" >\n    <mat-form-field>\n    <input matInput formControlName=\"barcode\" type=\"text\" name=\"barcode\" required placeholder=\"Saisir le code barre\">\n    </mat-form-field>\n\n    <button mat-icon-button [disabled]=\"!formData.valid\" type=\"submit\"><mat-icon>qr_code_scanner</mat-icon></button>\n  </form>\n</div>\n","/*\nImport\n*/\n  // Angular\n  import { Injectable } from '@angular/core';\n  import { HttpClient, HttpHeaders } from '@angular/common/http';\n\n  // Inner\n  import { environment } from \"../../../environments/environment\";\n  import { ObservablesService } from \"../observable/observable.service\";\n//\n\n/*\nDefinition and export\n*/\n  @Injectable()\n  export class AuthService {\n\n    // Inject module(s) in the service\n    constructor( private HttpClient: HttpClient, private ObservablesService: ObservablesService ){};\n\n    /*\n    Method to set header\n    */\n      private setHeaderRequest = () => {\n        // Set header\n        let myHeader = new HttpHeaders();\n        myHeader.append('Content-Type', 'application/json');\n\n        // Return header\n        return { headers: myHeader };\n      }\n    //\n\n    /*\n    AUTH methods\n    */\n      // Register user\n      public register(data: any): Promise<any> {\n        // Launch request\n        return this.HttpClient.post(`${environment.apiUrl}/auth/register`, data, this.setHeaderRequest())\n        .toPromise()\n        .then( data => this.getData('register', data))\n        .catch(this.handleError);\n      }\n\n      // Login user\n      public login(data: any): Promise<any> {\n        // Launch request\n        return this.HttpClient.post(`${environment.apiUrl}/auth/login`, data, this.setHeaderRequest())\n        .toPromise()\n        .then( data => this.getData('login', data))\n        .catch(this.handleError);\n      }\n\n      // Get user identity\n      public identity(data: any): Promise<any> {\n        // Launch request\n        return this.HttpClient.post(`${environment.apiUrl}/auth/me`, data, this.setHeaderRequest())\n        .toPromise()\n        .then( data => this.getData('users', data))\n        .catch(this.handleError);\n      }\n    //\n\n    /*\n    Methods to get API responses\n    */\n      // Get the API response\n      private getData = (endpoint, apiResponse: any) => {\n        // Switch endpoint to set observable value\n        switch(endpoint) {\n          case 'login':\n            // Set user info observable value\n            this.ObservablesService.setObservableData('login', apiResponse.data);\n            break;\n\n          case 'users':\n            // Set user info observable value\n            this.ObservablesService.setObservableData('users', apiResponse.data);\n            break;\n\n          default:\n            break;\n        };\n\n        // Retun data anytime\n        return apiResponse || {};\n      };\n\n      // Get the API error\n      private handleError = (apiError: any) => Promise.reject(apiError.error);\n\n    //\n  };\n//\n","/*\nImports\n*/\n  // Angular\n  import { Injectable } from '@angular/core';\n  import { BehaviorSubject, Observable } from 'rxjs';\n//\n\n/*\nDefinition and export\n*/\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class ObservablesService {\n\n    constructor() {}\n\n    // Init observable\n    protected userInfo: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    protected productInfo: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    protected userList: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n    // Set observable value\n    public setObservableData = (type: string, data: any) => {\n      console.log({data, type});\n      switch(type) {\n        case 'users':\n          this.userInfo.next(data);\n          break;\n\n        case 'login':\n          // Set local storage\n          if(data._id != 'undefined' && data._id != null) {\n            localStorage.setItem('local-userId', data._id );\n          }\n          this.userInfo.next(data);\n          break;\n\n        case 'logout':\n          this.userInfo.next(data);\n          break;\n\n        case 'product':\n          this.productInfo.next(data);\n          break;\n\n        case 'list':\n          this.userList.next(data);\n          break;\n\n        default:\n          break;\n      };\n    };\n\n    // Get observable value\n    public getObservableData = (type: string) => {\n      switch(type) {\n        case 'users':\n          return this.userInfo;\n\n        case 'product':\n          return this.productInfo;\n\n        case 'list':\n          return this.userList;\n\n        default:\n        break;\n      };\n    };\n  }\n//\n","/*\nImport\n*/\n  // Angular\n  import { Injectable } from '@angular/core';\n  import { HttpClient, HttpHeaders } from '@angular/common/http';\n\n  // Inner\n  import { environment } from \"../../../environments/environment\";\n  import { ObservablesService } from \"../observable/observable.service\";\nimport { Observable } from 'rxjs';\n//\n\n/*\nDefinition and export\n*/\n  @Injectable()\n  export class ProductService {\n\n    /*\n\t\tDéclarations\n\t\t*/\n      private apiUrl: String;\n      private apiOpenFoodUrl: String;\n    //\n\n    // Inject module(s) in the service\n    constructor( private HttpClient: HttpClient, private ObservablesService: ObservablesService ) {\n      this.apiUrl = environment.apiUrl\n      this.apiOpenFoodUrl = environment.openFoodUrl;\n    };\n\n    /*\n    Method to set header\n    */\n      private setHeaderRequest = () => {\n        // Set header\n        let myHeader = new HttpHeaders();\n        myHeader.append('Content-Type', 'application/json');\n\n        // Return header\n        return { headers: myHeader };\n      }\n    //\n\n    // Get product Open Food Fact\n    public getProductOpenfoodfact(barcode: String): Promise<any> {\n      return this.HttpClient.get(`${this.apiOpenFoodUrl}/${barcode}.json`, this.setHeaderRequest())\n      .toPromise()\n      .then( jsonData => this.getData(jsonData))\n      .catch(this.handleError);\n    }\n    //\n\n    // Get product data\n    public getProdutData(barcode: String): Promise<any> {\n      return this.HttpClient.post(`${this.apiUrl}/openfoodfacts`, {\"barcode\": barcode}, this.setHeaderRequest())\n      .toPromise()\n      .then( data => this.getData(data))\n      .catch(this.handleError);\n    }\n\n    // Save JSON file product\n    public saveJsonProduct(barcode: String, data: String): Promise<any> {\n      return this.HttpClient.post(`${this.apiUrl}/openfoodfacts`, {\"barcode\": barcode, \"jsonData\": data}, this.setHeaderRequest())\n      .toPromise()\n      .then( createData => this.getData(createData))\n      .catch(this.handleError);\n    }\n\n    // Get product score\n    public getProductScore(endpoint: String, barcode: String): Promise<any> {\n      return this.HttpClient.get(`${this.apiUrl}/${endpoint}/${barcode}`, this.setHeaderRequest())\n      .toPromise()\n      .then( productData => this.getData(productData, 'product'))\n      .catch(this.handleError);\n    }\n\n    // Send user note product\n    public setUserNoteProduct(endpoint: String, barcode: String, note: Number, userId: String): Promise<any> {\n      return this.HttpClient.post(`${this.apiUrl}/${endpoint}/note`, {\"barcode\": barcode, \"note\": note, \"userId\": userId}, this.setHeaderRequest())\n      .toPromise()\n      .then( createData => this.getData(createData, 'product'))\n      .catch(this.handleError);\n    }\n\n    /*\n\t\tMethods to get API responses\n\t\t*/\n      // Get the API response\n      private getData(apiResponse: any, endpoint: String = '') {\n        console.log(apiResponse);\n        switch(endpoint) {\n          case 'product':\n            if(apiResponse.data != null && apiResponse.err == false && typeof apiResponse.data != undefined) {\n              this.ObservablesService.setObservableData('product', apiResponse.data);\n              return apiResponse.data;\n            }\n\n          default:\n            return apiResponse || {};\n        }\n      };\n\n    // Get the API error\n      private handleError(err: any) {\n          return Promise.reject(err);\n      };\n    //\n  }\n//\n","/*\nImports\n*/\n\timport { Injectable } from '@angular/core';\n\timport { HttpClient, HttpHeaders } from '@angular/common/http';\n\timport { ObservablesService } from \"../observable/observable.service\";\n  import { environment } from 'src/environments/environment';\n//\n\n/*\nDefinition & export\n*/\n\t@Injectable({\n\t\tprovidedIn: 'root'\n\t})\n\n\texport class UserService {\n\t\t/*\n\t\tDéclarations\n\t\t*/\n\t\t\t\tprivate apiUrl: String;\n\t\t//\n\n\t\tconstructor( private HttpClient: HttpClient, private ObservablesService: ObservablesService ) {\n\t\t\t\tthis.apiUrl = environment.apiUrl;\n    };\n\n    /*\n    Method to set header\n    */\n      private setHeaderRequest = () => {\n        // Set header\n        let myHeader = new HttpHeaders();\n        myHeader.append('Content-Type', 'application/json');\n\n        // Return header\n        return { headers: myHeader };\n      }\n    //\n\n    public getUserList = (endpoint: String, userId: String) => {\n      return this.HttpClient.get(`${this.apiUrl}/${endpoint}/${userId}/list`)\n      .toPromise()\n      .then( data => this.getData(data, \"list\") )\n      .catch(this.handleError);\n    }\n\n    public addUserList = (endpoint: String, userId: String, name: String) => {\n      return this.HttpClient.post(`${this.apiUrl}/${endpoint}`, { name: name, user: userId })\n      .toPromise()\n      .then( data => this.getData(data) )\n      .catch(this.handleError);\n    }\n\n    public addProductScanned = (endpoint: String, userId: String, data: any) => {\n      return this.HttpClient.post(`${this.apiUrl}/${endpoint}/${userId}/product`, {barcode: data.product.code, img_url: data.product.image_url, name: data.product.product_name_fr})\n      .toPromise()\n      .then( data => this.getData(data, endpoint) )\n      .catch(this.handleError);\n    }\n\n    public addProductToList = (endpoint: String, listId: String, data: any) => {\n      return this.HttpClient.post(`${this.apiUrl}/${endpoint}/${listId}/product`, data)\n      .toPromise()\n      .then( data => this.getData(data, 'list') )\n      .catch(this.handleError);\n    }\n\n    public deleteProductToList = (endpoint: String, listId: String, productId: any) => {\n      return this.HttpClient.put(`${this.apiUrl}/${endpoint}/${listId}/product`, {productId: productId})\n      .toPromise()\n      .then( data => this.getData(data) )\n      .catch(this.handleError);\n    }\n\n\t\t/*\n\t\tMethods to get API responses\n\t\t*/\n\t\t// Get the API response\n\t\tprivate getData(apiResponse: any, endpoint: String = '') {\n      console.log(apiResponse);\n      console.log(endpoint);\n\t\t\tswitch(endpoint) {\n        case \"list\":\n          this.ObservablesService.setObservableData(\"list\", apiResponse.data);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn apiResponse || {};\n\t\t\t}\n\t\t};\n\n\t\t\t\t// Get the API error\n\t\t\t\tprivate handleError(err: any){\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t};\n\t\t//\n\t}\n//\n","/*\nImport\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n//\n\n/*\nComponent configuration\n*/\n  @Component({\n    selector: 'app-bot-bar',\n    templateUrl: './bot-bar.component.html',\n    styleUrls: ['./bot-bar.component.css']\n  })\n//\n\n/*\nComponent class definition\n*/\n  export class BotBarComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n  }\n//\n","<nav>\n  <ul>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <a [routerLink]=\"'/'\"><img src=\"../../../assets/img/list.svg\" alt=\"\"><span>Listes</span></a>\n    </li>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <a [routerLink]=\"'/recipe'\"><img src=\"../../../assets/img/recipe.svg\" alt=\"\"><span>Recettes</span></a>\n    </li>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: false}\">\n      <a [routerLink]=\"'/product'\"><img src=\"../../../assets/img/product.svg\" alt=\"\"><span>Produits</span></a>\n    </li>\n    <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <a [routerLink]=\"'/profile'\"><img src=\"../../../assets/img/profile.svg\" alt=\"\"><span>Profil</span></a>\n    </li>\n  </ul>\n</nav>\n","/*\nImports\n*/\n  // Angular\n  import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n  import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n  import { Router } from '@angular/router';\n\n  // Inner\n  import { ObservablesService } from '../../services/observable/observable.service';\n  import { UserService } from '../../services/user/user.service';\n//\n\n/*\nComponant configuration\n*/\n  @Component({\n    selector: 'app-side-bar',\n    templateUrl: './side-bar.component.html',\n    styleUrls: ['./side-bar.component.css']\n  })\n//\n\n/*\nExport\n*/\n  export class SideBarComponent implements OnInit {\n\n    // Declarations\n    public userList: any;\n    public userId: String;\n    public hideFormNewList: Boolean = true;\n    public formData: FormGroup;\n\n    @Output() listChanged = new EventEmitter();\n    @Input() open = false;\n\n    constructor( private ObservablesService: ObservablesService, private UserService: UserService, private Router: Router, private FormBuilder: FormBuilder ){}\n\n    /*\n    Methods\n    */\n      private getList = () => {\n        this.UserService.getUserList('user', this.userId)\n        .then( apiResponse => {\n          this.userList = apiResponse.data;\n        })\n        .catch( apiResponse => {\n          console.error(apiResponse)\n        })\n      }\n\n      public logout = () => {\n        localStorage.removeItem('local-userId');\n        // Set user info observabale value\n        this.ObservablesService.setObservableData('logout', null);\n        this.Router.navigateByUrl('/');\n      }\n\n      public changeCurrentList = (listId) => {\n        localStorage.setItem('list-selected', listId);\n        this.listChanged.emit(listId);\n      }\n\n      public toggleForm = () => {\n        this.hideFormNewList = !this.hideFormNewList;\n      }\n\n      public resetForm = () => {\n        this.formData = this.FormBuilder.group({\n          name: [ null, Validators.required ]\n        });\n      }\n\n      public newList = (data: any) => {\n        if(data.value.name != null) {\n          this.UserService.addUserList('list', this.userId, data.value.name)\n          .then(data => {\n            this.resetForm();\n            this.getList();\n            this.toggleForm();\n          });\n        }\n      }\n    //\n\n    ngOnInit(): void {\n      this.resetForm();\n\n      if(localStorage.getItem('local-userId') != null) {\n        this.ObservablesService.getObservableData('list').subscribe( userList => {\n          // Check value\n          if( userList === null) { this.userList = null }\n          else { this.userList = userList}\n        })\n\n        this.userId = localStorage.getItem('local-userId');\n        //this.getList();\n      }\n    }\n\n  }\n//\n","<mat-sidenav [opened]=\"open\" mode=\"over\">\n  <div class=\"user_info\">\n    <div>\n      <span>M</span>\n    </div>\n\n    <div class=\"user_detail\">\n      <span>Maxime Louasse</span>\n      <span>louasse.maxime@gmail.com</span>\n    </div>\n  </div>\n\n  <mat-nav-list *ngIf=\"userList\">\n    <mat-list-item  *ngFor=\"let list of userList\" (click)=\"changeCurrentList(list._id)\">\n      <span mat-line>{{ list.name }}</span>\n      <span mat-line class=\"quantity\">{{ list.products.length }} articles</span>\n    </mat-list-item>\n    <mat-list-item>\n      <form id=\"addList\" [formGroup]=\"formData\" (submit)=\"newList(formData)\" [hidden]=\"hideFormNewList\">\n        <mat-form-field>\n          <input matInput formControlName=\"name\" name=\"name\" type=\"text\" placeholder=\"Nom de la liste\">\n        </mat-form-field>\n        <button class=\"new-list-button\" mat-button type=\"submit\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </form>\n      <button class=\"new-list-button\" mat-button type=\"button\" *ngIf=\"hideFormNewList\" (click)=\"toggleForm()\">\n        <mat-icon>add</mat-icon>\n        Ajouter une liste\n      </button>\n    </mat-list-item>\n  </mat-nav-list>\n  <!--<button class=\"btn-logout\" mat-button type=\"button\" (click)=\"logout()\">Déconnexion</button>-->\n</mat-sidenav>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiUrl: '/api',\n  openFoodUrl: 'https://world.openfoodfacts.org/api/v0/product',\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}